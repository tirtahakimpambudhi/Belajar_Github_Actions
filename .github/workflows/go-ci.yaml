name: Golang Integration Test
on:
  pull_request:
    branches:
      - main

jobs:
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
      - run: go version
      - name: Setup Environment
        env:
          PG_DB_HOST: localhost
          PG_DB_PORT: 5432
          PG_DB_USER: postgres
          PG_DB_PASSWORD: postgres
          PG_DB_NAME: postgres
        run: echo "Finish Setup Environment"
      - name: Running Test Golang
        run: |
          go mod tidy
          go test test/DBConnection_test.go
